name: Build and Deploy to AWS ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-1
  ECR_REGISTRY: 288761751364.dkr.ecr.ap-southeast-1.amazonaws.com
  ECR_REPOSITORY: staging/nestjs
  IMAGE_TAG: latest
  EC2_HOST: 13.212.123.62
  EC2_USER: ubuntu

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag Docker image
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push image to Amazon ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2 and restart container
        run: |
          echo "$EC2_SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST <<EOF
            echo "== Pulling and restarting container =="
            IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            sudo docker login -u AWS -p $(aws ecr get-login-password --region $AWS_REGION) $ECR_REGISTRY
            sudo docker pull \$IMAGE
            sudo docker stop nest-container || true
            sudo docker rm nest-container || true
            sudo docker run -d --name nest-container -p 3000:3000 \$IMAGE
    EOF
        env:
          EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
